// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      // For web, use a simple configuration
      return const FirebaseOptions(
        apiKey: '0559c5b7ab1f41d39ab130659252907',
        appId: '1:188893492065:android:dde875b9a9eb660adc4b20',
        messagingSenderId: '123456789',
        projectId: 'weather-app-demo',
        authDomain: 'weather-app-demo.firebaseapp.com',
        storageBucket: 'weather-app-demo.appspot.com',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;

      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: '0559c5b7ab1f41d39ab130659252907',
    appId: '1:188893492065:android:dde875b9a9eb660adc4b20',
    messagingSenderId: '123456789',
    projectId: 'weather-app-demo',
    storageBucket: 'weather-app-demo.appspot.com',
  );
}
